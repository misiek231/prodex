<#@ template language="C#" #>
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using Prodex.Client.Extensions;
using System.Net;
using System.Net.Http.Json;

namespace Prodex.Client.RestClients;

public class <#=Model.Name#>Client
{
    private readonly HttpClient client;

    public <#=Model.Name#>Client(HttpClient client)
    {
        this.client = client;
    }
<# foreach(var item in Model.Endpoints) { #>    
    public async <#=item.ReturnType#> <#=item.MethodName#>(<# var i = 1; foreach(var param in item.Parameters) { #><#=param.Type #> <#= param.Name#><# if(item.Parameters.Count != i)#>, <# i++; } #>)
    {
<# if(item.Method == "POST") { #>
<# if(item.Validate) { #>
        if (model.Validate(null).HasErrors)
            return new System.Net.Http.HttpResponseMessage(System.Net.HttpStatusCode.BadRequest);
<# } #>        
        var result = await client.PostAsJsonAsync("<#=item.Route#>", model);

        if (result.StatusCode == HttpStatusCode.BadRequest)
        {
            model.WithErrors(await result.Content.ReadAsStringAsync());
        }

        return result;
<# } else if(item.Method == "GET") { #>        return await client.GetFromJsonAsync<<#=item.ResponseType#>>("<#=item.Route#>", model);
<# } #>
    }
<# } #>
}
<#+
    public ClientModel Model { get; set; }
#>