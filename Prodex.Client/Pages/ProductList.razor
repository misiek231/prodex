@page "/products"
@using Microsoft.AspNetCore.Authorization;
@using Prodex.Client.Coponents
@using Prodex.Client.RestClients;
@using Prodex.Shared.Models.Products;
@using Prodex.Shared.Pagination;
@inject ProductsClient Products

<Card>
    <CardHeader>
        <Button Type="ButtonType.Link" To="products/add" Color="Color.Primary">Dodaj</Button>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="ListItemModel" Data="@items" ReadData="LoadData" Responsive>
            <DataGridColumn Field="@nameof(ListItemModel.Id)" Caption="#" Sortable="false" />
            <DataGridColumn Field="@nameof(ListItemModel.Name)" Caption="Nazwa" Editable />
        </DataGrid>
    </CardBody>
    <CardFooter>
        <SimplePagination Pager="pager" LoadData="LoadData" />
    </CardFooter>
</Card>

@code {
    private List<ListItemModel> items = new List<ListItemModel>();
    private Pager pager = new Pager(1, 10);
    private bool Loading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        Loading = true;
        try
        {
            var result = await Products.Get(pager, new FilterModel());
            items = result.Items.ToList();
            pager.TotalRows = result.TotalRows;
        }
        catch (HttpRequestException ex)
        {
            // todo: find nice way to handle exceptions like that
        }
        Loading = false;
    }
}