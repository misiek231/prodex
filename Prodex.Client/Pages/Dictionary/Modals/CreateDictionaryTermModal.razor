@using Blazorise.Components
@using Prodex.Client.Coponents;
@using Prodex.Client.RestClients;
@using Prodex.Shared.Models.DictionaryTerms;
@inherits ModalBase
@inject DictionaryTermsClient DictionaryTermsClient


<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Wartość słownika</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <FormWrapper Form="Form">
                <FormSelect Property="p => p.DictionaryId" />
                <FormInput Property="p => p.Value" />
            </FormWrapper>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@Hide">Anuluj</Button>
            <Button Color="Color.Primary" Clicked="@Save">Zapisz</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modalRef;
    protected override Modal ModalRef => modalRef;

    private FormModel Form = new FormModel();

    [Parameter]
    public EventCallback LoadData { get; set; }

    private async Task Save()
    {
        if (Param.HasValue)
            await DictionaryTermsClient.Put(Param.Value, Form);
        else
            await DictionaryTermsClient.Post(Form);

        Hide();
        await LoadData.InvokeAsync();
    }

    protected override void OnShow()
    {
        Form = new FormModel();
    }

    protected override async Task OnShowWithParam()
    {
        if (!Param.HasValue) return;

        Form = await DictionaryTermsClient.Get(Param.Value);
    }
}
