@page "/processes"
@using Prodex.Client.RestClients;
@using Prodex.Shared.Models.Processes;
@using Prodex.Shared.Pagination;
@inject ProcessesClient Processes
@inject NavigationManager Navigation


<button @onclick="Add">Dodaj</button>

<table class="table">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Xml</th>
    </tr>
  </thead>
  <tbody>
        @foreach(var item in items)
        {
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.Name</td>
                <td>@item.Xml</td>
            </tr>
        }
  </tbody>
</table>

<button @onclick="() => ChangePage(-1)">Poprzednia strona</button>
<button @onclick="() => ChangePage(1)">Następna strona</button>

@code {
    private List<ListItemModel> items = new List<ListItemModel>();
    private Pager pager = new Pager(1, 10);

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        items = (await Processes.Get(pager, new FilterModel())).Items.ToList();
    }

    private void Add()
    {
        Navigation.NavigateTo("process-add");
    }

    private async Task ChangePage(int val)
    {
        pager.PageIndex += val;
        await LoadData();
    }
}