@page "/product/{TemplateId:long}/details/{Id:long}"
@using Prodex.Client.Coponents
@using Prodex.Client.Coponents.Form
@using Prodex.Client.Pages.Products.Components
@using Prodex.Client.RestClients;
@using Prodex.Shared.Models.Products;
@using System.Net;
@using Prodex.Shared.Pagination;
@using Prodex.Shared.Utils;
@inject NavigationManager Navigation
@inject ProductsClient Products

<Card>
    <CardHeader>
        @Details?.Name
    </CardHeader>
    <CardBody Class="d-flex flex-wrap gap-3">
        
        <Card Style="min-width: 20rem">
            <CardHeader>
                <b>Informacje podstawowe</b>
            </CardHeader>
            <CardBody>
                <p><b>ID: </b> @Details?.Id</p>
                <p><b>Nazwa: </b> @Details?.Name</p>
                <p><b>Szablon: </b> @Details?.Template?.Value</p>
                <p><b>Status: </b> <Badge Color="Details?.Status?.Color">@Details?.Status?.Value</Badge> </p>
            </CardBody>
        </Card>

        <Card Style="min-width: 20rem">
            <CardHeader>
                <b>Szczegóły</b>
            </CardHeader>
            <DynamicDetails ProductId="Id" />
        </Card>

        <Card Style="min-width: 30rem">
            <CardHeader>
                <b>Historia</b>
            </CardHeader>
            <CardBody>
                <HistoryList @ref="historyList" ProductId="Id" />
            </CardBody>
        </Card>

        <Card Style="min-width: 50rem">
            <CardHeader>
                <b>Proces</b>
            </CardHeader>
            <CardBody>
                <BpmnModeler />
            </CardBody>
        </Card>
    </CardBody>
    <CardFooter>
        <Div class="d-flex gap-1">
            @foreach(var button in Details?.Buttons ?? new List<ApiButton>())
            {
                <Button Color="Color.Primary" @onclick="() => ActionButtonClick(button.ActionId)">@button.Name</Button>
            }
        </Div>
    </CardFooter>
</Card>


@code {
    private DetailsModel Details;

    [Parameter]
    public long Id { get; set; }

    private HistoryList historyList;

    [Parameter]
    public long TemplateId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Details = await Products.Get(Id); 
    }

    private async Task ActionButtonClick(long actionId)
    {
        await Products.Execute(Id, actionId);
        Details = await Products.Get(Id);
        await historyList.Reload();
    }
}
