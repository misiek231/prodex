@using Prodex.Client.RestClients;
@using Prodex.Shared.Models.ProductTemplates.ElementOptions;
@using Prodex.Shared.Models.ProductTemplates.Statuses;
@inject ProductTemplatesConfigsClient Service;

<Div class="mt-3">

    <FormWrapper Form="Form">
        <FormEnumSelect Property="p => p.Action" />
        <FormSelect Property="p => p.Status" AdditionalFilter="StatusFilter" />
    </FormWrapper>

    <Button Color="Color.Primary" Clicked="@Save">Zapisz konfigurację</Button>

</Div>

@code {
    ServiceTaskConfigFormModel Form = new ServiceTaskConfigFormModel();

    [Parameter]
    public string ElementId { get; set; }

    [Parameter]
    public long TemplateId { get; set; }

    private FilterModel StatusFilter => new FilterModel { TemplateId = TemplateId };

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        await base.OnInitializedAsync();
    }

    private async Task LoadData()
    {
        Form = await Service.GetServiceTaskConfig(TemplateId, ElementId) ?? Form;
    }

    private async Task Save()
    {
        if (Form.Id.HasValue)
            await Service.UpdateServiceTaskConfig(Form.Id.Value, Form);
        else
            await Service.CreateServiceTaskConfig(TemplateId, ElementId, Form);

        await LoadData();
    }
}
