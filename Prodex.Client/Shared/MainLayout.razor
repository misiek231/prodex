@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Authorization;
@using Prodex.Client.Coponents
@using Prodex.Client.Services.Auth;
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@inherits LayoutComponentBase

<AuthorizeView>
    <Authorized>
        <Layout Sider>
            <LayoutSider>
                <LayoutSiderContent>
                    <NavMenu />
                </LayoutSiderContent>
            </LayoutSider>

            <Layout>
                <LayoutHeader Fixed>
                    <Bar Breakpoint="Breakpoint.Desktop" Background="Background.White" Shadow="Shadow.Default" ThemeContrast="ThemeContrast.Light">
                        <BarEnd>
                            <BarItem>
                                <BarLink @onclick="LogoutClick">Wyloguj</BarLink>
                            </BarItem>
                        </BarEnd>
                    </Bar>

                </LayoutHeader>
                <LayoutContent Padding="Padding.Is4">
                    @Body
                </LayoutContent>
            </Layout>
        </Layout>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task LogoutClick()
    {
        await LocalStorage.RemoveItemAsync("token");
        ((CustomAuthenticationStateProvider)AuthProvider).NotifyAuthStateChanged();
        Navigation.NavigateTo("login");
    }
}